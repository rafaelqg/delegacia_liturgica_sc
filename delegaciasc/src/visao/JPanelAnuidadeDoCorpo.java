/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Color;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import br.qg.loja.integracao.DAOFactory;
import br.qg.loja.modelo.Loja;
import br.qg.loja.modelo.PagamentoAnuidadeCorpo;
import br.qg.loja.modelo.TipoEspecie;
import visao.IOManagement.DateManager;
import visao.IOManagement.NumericManager;
import visao.IOManagement.jtable.JTableFormatter;
import visao.IOManagement.jtable.ZebraRenderer;

/**
 *
 * @author RafaelQG
 */
public class JPanelAnuidadeDoCorpo extends javax.swing.JPanel {

    private String[] columnNames = {"ID", "Ano", "Guia", "Valor (R$)", "Tipo (Espécie)", "Dt. Compr. Bancário", "Nr. Prancha", "Dt. Prancha", "Motivo Diligência", "Dt. Emissão Diligência", "Dt. Retorno Diligência", "Nr. Romaneio", "Dt. Romaneio"};

    /**
     * Creates new form JPanelAnuidadeDoIrmao
     */
    public JPanelAnuidadeDoCorpo() {
        initComponents();
        initTables();
        this.jTable1.setAutoCreateRowSorter(true);
        this.jTable1.setRowHeight(21);
        JComboBox field = this.jComboBoxLoja;
        ArrayList<Loja> lojas = DAOFactory.getDaoLoja().buscaLojas();
        for (Loja obj : lojas) {
            field.addItem(obj);
        }
    }

    private void initTables() {

        JTableFormatter tableFormatter = new JTableFormatter();
        tableFormatter.configCellData(this.jTable1, "Dt. Compr. Bancário");
        tableFormatter.configCellData(this.jTable1, "Dt. Prancha");
        tableFormatter.configCellData(this.jTable1, "Dt. Emissão Diligência");
        tableFormatter.configCellData(this.jTable1, "Dt. Retorno Diligência");
        tableFormatter.configCellData(this.jTable1, "Dt. Romaneio");
        tableFormatter.configCellAno(this.jTable1, "Ano");
        tableFormatter.configTipoEspecie(jTable1, "Tipo (Espécie)");

        //set zebra rows
        this.jTable1.setDefaultRenderer(Object.class, new ZebraRenderer());//set zebra rows
        

        Color shadeOfBlue = new Color(164, 211, 238);
        Color shadeOfGreen = new Color(112, 219, 147);
        Color shadeOfYellow = new Color(255, 228, 196);
        Color shadeOfSnow = new Color(224, 238, 224);
        Color shadeOfRed = new Color(255, 192, 203);

        tableFormatter.setHeaderBackground(this.jTable1, "Ano", shadeOfYellow);
        tableFormatter.setHeaderBackground(this.jTable1, "Guia", shadeOfYellow);
        tableFormatter.setHeaderBackground(this.jTable1, "Valor (R$)", shadeOfSnow);
        tableFormatter.setHeaderBackground(this.jTable1, "Tipo (Espécie)", shadeOfSnow);
        tableFormatter.setHeaderBackground(this.jTable1, "Dt. Compr. Bancário", shadeOfSnow);

        tableFormatter.setHeaderBackground(this.jTable1, "Nr. Prancha", shadeOfRed);
        tableFormatter.setHeaderBackground(this.jTable1, "Dt. Prancha", shadeOfRed);

        tableFormatter.setHeaderBackground(this.jTable1, "Nr. Romaneio", shadeOfBlue);
        tableFormatter.setHeaderBackground(this.jTable1, "Dt. Romaneio", shadeOfBlue);

        tableFormatter.setHeaderBackground(this.jTable1, "Dt. Emissão Diligência", shadeOfGreen);
        tableFormatter.setHeaderBackground(this.jTable1, "Dt. Retorno Diligência", shadeOfGreen);
        tableFormatter.setHeaderBackground(this.jTable1, "Motivo Diligência", shadeOfGreen);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBoxLoja = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        valorTotaltxt = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabelSearchResult = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Ano", "Guia", "Valor (R$)", "Tipo (Espécie)", "Dt. Compr. Bancário", "Nr. Prancha", "Dt. Prancha", "Motivo Diligência", "Dt. Emissão Diligência", "Dt. Retorno Diligência", "Nr. Romaneio", "Dt. Romaneio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(25);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(30);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(10);

        jLabel2.setText("Selecione a loja desejada:");

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBoxLoja.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxLojaItemStateChanged(evt);
            }
        });

        jLabel1.setText("Valor total (R$):");

        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabelSearchResult.setText("Resultado da busca");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(valorTotaltxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxLoja, 0, 434, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelSearchResult)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxLoja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(valorTotaltxt)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelSearchResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.getCursor().getType() != Cursor.WAIT_CURSOR) { // avoid more than one click while processing
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
            try {
                DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
                for (int i = 0; i < model.getRowCount(); i++) {
                    Object anoCell = this.jTable1.getValueAt(i, 1);
                    Object idCell = this.jTable1.getValueAt(i, 0);
                    if (anoCell != null && !anoCell.toString().equals("")) {
                        PagamentoAnuidadeCorpo pac = new PagamentoAnuidadeCorpo();
                        setPagamentoAnuidadeCorpoBasedOnTableRow(pac, model, i);
                        DAOFactory.getDAOAnuidadeCorpo().armazenaPagamentoAnuidadeCorpo(pac);
                    } else if (idCell != null && anoCell == null) { // now delete this row
                        PagamentoAnuidadeCorpo pac = new PagamentoAnuidadeCorpo();
                        pac.setNumero(Integer.valueOf(idCell.toString()));
                        DAOFactory.getDAOAnuidadeCorpo().excluiPagamentoCorpo(pac);
                    }
                }
                updateTableData();
                JOptionPane.showMessageDialog(this, "Pagamentos do corpo salvos com sucesso!");
            } finally {
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxLojaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxLojaItemStateChanged
    }//GEN-LAST:event_jComboBoxLojaItemStateChanged

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if (evt.getKeyCode() == 127 && this.jTable1.getSelectedRow() != -1) {
            if (JOptionPane.showConfirmDialog(this, "Você tem certeza que deseja excluir este pagamento?", "", JOptionPane.YES_NO_OPTION) == 0) {
                Object idCell = this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 0);
                if (idCell != null) {
                    PagamentoAnuidadeCorpo pac = new PagamentoAnuidadeCorpo();
                    pac.setNumero(Integer.valueOf(idCell.toString()));
                    DAOFactory.getDAOAnuidadeCorpo().excluiPagamentoCorpo(pac);
                }
                updateTableData();
                JOptionPane.showMessageDialog(this, "Pagamento excluido com sucesso!");
            }
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        updateTableData();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void updateTableData() {
        if (this.getCursor().getType() != Cursor.WAIT_CURSOR) { // avoid more than one click while processing
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
            try {
                Loja lj = (Loja) this.jComboBoxLoja.getSelectedItem();
                ArrayList<PagamentoAnuidadeCorpo> lista = DAOFactory.getDAOAnuidadeCorpo().buscaPagamentoPorCorpo(lj);
                limpaTabela();
                DateManager dm = new DateManager();
                NumericManager nm = new NumericManager();
                
                if(lista.isEmpty()){
                    this.jLabelSearchResult.setText(JTableFormatter.NO_RESULT_FOUND_LABEL);
                }else{
                    this.jLabelSearchResult.setText("Foram encontrados "+ lista.size() + " registros");
                }
                
                int i = 0;
                double total = 0;
                DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
                for (PagamentoAnuidadeCorpo pagamento : lista) {
                    int j = 0;
                    model.addRow(new Vector());
                    this.jTable1.setValueAt(pagamento.getNumero(), i, j++);
                    this.jTable1.setValueAt(pagamento.getAnoPagamento(), i, j++);
                    this.jTable1.setValueAt(pagamento.getNumeroGuia(), i, j++);
                    this.jTable1.setValueAt(pagamento.getValorDeposito(), i, j++);
                    this.jTable1.setValueAt(pagamento.getTipoEspecie(), i, j++);
                    this.jTable1.setValueAt(dm.setDateField(pagamento.getDtComprovanteBancario()), i, j++);
                    this.jTable1.setValueAt(pagamento.getNrPrancha(), i, j++);
                    this.jTable1.setValueAt(dm.setDateField(pagamento.getDtPrancha()), i, j++);
                    this.jTable1.setValueAt(pagamento.getMotivo(), i, j++);
                    this.jTable1.setValueAt(dm.setDateField(pagamento.getDtEmissao()), i, j++);
                    this.jTable1.setValueAt(dm.setDateField(pagamento.getDtRetorno()), i, j++);
                    this.jTable1.setValueAt(pagamento.getNrRomaneio(), i, j++);
                    this.jTable1.setValueAt(dm.setDateField(pagamento.getDtRomaneio()), i, j++);
                    //continuar preenchendo os campos da tabela
                    total += pagamento.getValorDeposito();
                    i++;
                }
                valorTotaltxt.setText(nm.getCurrencyFormat(total));
            } finally {
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }

    private void limpaTabela() {
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        /*
        for (int i = 0; i < 100; i++) {
            model.addRow(new Vector());
        }
        */
        this.jTable1.setDefaultRenderer(Object.class, new ZebraRenderer());//set zebra rows 
    }

    private ArrayList<String> setPagamentoAnuidadeCorpoBasedOnTableRow(PagamentoAnuidadeCorpo pac, DefaultTableModel model, int index) {
        DateManager dm = new DateManager();
        NumericManager nm = new NumericManager();
        ArrayList<String> erros = new ArrayList<String>();
        try {
            int j = 0;
            Object obj = model.getValueAt(index, j++);
            pac.setLoja((Loja) this.jComboBoxLoja.getSelectedItem());
            if (obj != null) {
                pac.setNumero(Integer.valueOf(String.valueOf(obj)));
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setAnoPagamento(Integer.valueOf(String.valueOf(obj)));
            }
            obj = model.getValueAt(index, j++);
            int temp = nm.getIntField(obj);
            if (temp == -1) {
                // erros.add("");
            } else {
                pac.setNumeroGuia(temp);
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setValorDeposito(Double.valueOf(String.valueOf(obj)));
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setTipoEspecie((TipoEspecie) obj);
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setDtComprovanteBancario(dm.getDateField(obj));
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setNrPrancha(obj.toString());
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setDtPrancha(dm.getDateField(obj));
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setMotivo(obj.toString());
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setDtEmissao(dm.getDateField(obj));
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setDtRetorno(dm.getDateField(obj));
            }

            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setNrRomaneio(obj.toString());
            }
            obj = model.getValueAt(index, j++);
            if (obj != null) {
                pac.setDtRomaneio(dm.getDateField(obj));
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
        return erros;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBoxLoja;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelSearchResult;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel valorTotaltxt;
    // End of variables declaration//GEN-END:variables
}
