/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.io.File;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.text.MaskFormatter;
import javax.swing.text.TableView;

import br.qg.loja.controle.ObreiroFacade;
import br.qg.loja.integracao.DAOFactory;
import br.qg.loja.modelo.Cargo;
import br.qg.loja.modelo.Grau;
import br.qg.loja.modelo.Loja;
import br.qg.loja.modelo.Obreiro;
import visao.IOManagement.DateManager;
import visao.IOManagement.jtable.JTableFormatter;
import visao.IOManagement.jtable.ZebraRenderer;
import visao.printer.pdf.PDFViewer;

/**
 *
 * @author RafaelQG
 */
public class JPanelRelatorioObreirosLoja extends javax.swing.JPanel {

    /**
     * Creates new form JPanelRelatorio
     */
    public JPanelRelatorioObreirosLoja() {
        initComponents();
        cargaInicial();
    }

    private void cargaInicial() {
        limpaTabela();

        ArrayList<Loja> lojas = DAOFactory.getDaoLoja().buscaLojas();
        for (Loja l : lojas) {
            this.jComboBoxLoja.addItem(l);
        }
        this.jTableRelatorio.setDefaultRenderer(Object.class, new ZebraRenderer());//set zebra rows
        this.jTableRelatorio.setAutoCreateRowSorter(true);
        /*
         Loja l=(Loja)this.jComboBoxLoja.getSelectedItem();
         ArrayList<ArrayList> lista = DAOFactory.getDAOObreiro().buscaObreirosPorLoja(l);
         for (ArrayList obj : lista) {
         insereObreiroTabela(obj);
         }
         */
    }

    private void limpaTabela() {
        DefaultTableModel model = (DefaultTableModel) this.jTableRelatorio.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    private void insereObreiroTabela(ArrayList obj) {
        DefaultTableModel model = (DefaultTableModel) this.jTableRelatorio.getModel();
        Vector data = new Vector();
        if (obj.get(0) != null) {
            int ime = Integer.valueOf(obj.get(0).toString());
            String nome=obj.get(1).toString();
            Grau g = (Grau) obj.get(2);
            Date dt = (Date) obj.get(3);
            DateManager dm = new DateManager();
            data.add(ime);
            data.add(nome);
            data.add(g.getNumero());
            data.add(dm.setDateField(dt));
            model.addRow(data);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRelatorio = new javax.swing.JTable();
        jLabelBusca = new javax.swing.JLabel();
        jComboBoxLoja = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabelSearchResult = new javax.swing.JLabel();

        jTableRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IME", "Nome do obreiro", "Grau", "Data de Iniciação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRelatorio.getTableHeader().setReorderingAllowed(false);
        jTableRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableRelatorioMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRelatorio);

        jLabelBusca.setText("Loja:");

        jComboBoxLoja.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxLojaItemStateChanged(evt);
            }
        });

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelSearchResult.setText("Resultado da busca");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelBusca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxLoja, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelSearchResult)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBusca)
                    .addComponent(jComboBoxLoja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelSearchResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableRelatorioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRelatorioMouseReleased
        int row = this.jTableRelatorio.getSelectedRow();
        int ime = Integer.valueOf(String.valueOf(this.jTableRelatorio.getValueAt(row, 0)));
        if (this.getCursor().getType() != Cursor.WAIT_CURSOR) { // avoid more than one click while processing
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
            try {
                JFramePrincipal.showForm(ime);
            } finally {
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_jTableRelatorioMouseReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Loja l = (Loja) this.jComboBoxLoja.getSelectedItem();
            if (l != null) {
                String targetFileNameFullPath = l.getNumero() + "_" + l.getNome() + "_obreiros.pdf";
                this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                try {
                    new ObreiroFacade().impremeObreirosPorLoja(l, targetFileNameFullPath);
                    File f = new File(targetFileNameFullPath);
                    PDFViewer.show(f);
                } finally {
                    this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                }
            }
        } catch (NumberFormatException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBoxLojaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxLojaItemStateChanged
    }//GEN-LAST:event_jComboBoxLojaItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpaTabela();
        Loja l = (Loja) this.jComboBoxLoja.getSelectedItem();
        if (this.getCursor().getType() != Cursor.WAIT_CURSOR) { // avoid more than one click while processing
            try {
                this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                ArrayList<ArrayList> lista = DAOFactory.getDAOObreiro().buscaObreirosPorLoja(l);
                if (lista.isEmpty()) {
                    this.jLabelSearchResult.setText(JTableFormatter.NO_RESULT_FOUND_LABEL);
                } else {
                    this.jLabelSearchResult.setText("Foram encontrados " + lista.size() + " registros");
                }
                for (ArrayList obj : lista) {
                    insereObreiroTabela(obj);
                }
                this.jTableRelatorio.setDefaultRenderer(Object.class, new ZebraRenderer());//set zebra rows
            } finally {
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBoxLoja;
    private javax.swing.JLabel jLabelBusca;
    private javax.swing.JLabel jLabelSearchResult;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRelatorio;
    // End of variables declaration//GEN-END:variables
}
